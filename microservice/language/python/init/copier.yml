name:
  type: str
  help: What is the name of the microservice?
version:
  type: str
  help: What is the version of the microservice?
  default: 0.1.0
aggregate:
  type: str
  default: "{{ name.replace('_',' ').title().replace(' ', '') }}"
  help: What is the name of the microservices's Aggregate?
database:
  type: str
  default: postgres
  choices:
    - postgres
  help: What is the database? [ TODO ]
broker:
  type: str
  default: kafka
  choices:
    - kafka
  help: What is the broker? [ TODO ]
rest:
  type: str
  default: aiohttp
  help: What is the rest? [ TODO ]
  choices:
    - aiohttp
discovery:
  type: str
  default: minos
  choices:
    - minos
    - kong
  help: What is the discovery? [ TODO ]
package_manager:
  type: str
  link: true
  help: What package manager do you want to use?
  choices:
    poetry: &poetry_url "{{ template_registry }}/microservice-python-package-manager-poetry.tar.gz"
    pip: "{{ template_registry }}/microservice-python-package-manager-pip.tar.gz"
  default: *poetry_url
deploy:
  type: str
  link: true
  help: What deploy system do you want to use?
  choices:
    docker_compose: &docker_compose_url "{{ template_registry }}/microservice-python-deploy-docker-compose.tar.gz"
    kubernetes: "{{ template_registry }}/microservice-python-deploy-kubernetes.tar.gz"
  default: *docker_compose_url

_envops:
  block_start_string: "{%"
  block_end_string: "%}"
  comment_start_string: "{#"
  comment_end_string: "#}"
  variable_start_string: "{{"
  variable_end_string: "}}"
  keep_trailing_newline: false

_templates_suffix: .jinja

_tasks:
  - make -s create-database
