version: 2
name: {{ name }}
injections:
  - src.{{ aggregate }}QueryServiceRepository
databases:
  default:
    database: {{ name }}_db
    user: minos
    password: min0s
    host: localhost
    port: 5432
  query:
    database: {{ name }}_query_db
    user: minos
    password: min0s
    host: localhost
    port: 5432
  saga:
    path: ./{{ name }}.lmdb
interfaces:
  broker:
    port: minos.networks.BrokerPort
    common:
      host: localhost
      port: 9092
      queue:
        records: 1000
        retry: 2
    publisher:
      client: minos.plugins.kafka.KafkaBrokerPublisher
      queue: minos.networks.PostgreSqlBrokerPublisherQueue
    subscriber:
      client: minos.plugins.kafka.KafkaBrokerSubscriber
      queue: minos.networks.PostgreSqlBrokerSubscriberQueue
      validator: minos.networks.PostgreSqlBrokerSubscriberDuplicateValidator
  http:
    port: minos.networks.HttpPort
    connector:
      client: minos.plugins.aiohttp.AioHttpConnector
      host: 0.0.0.0
      port: 8023
  periodic:
    port: minos.networks.PeriodicPort
pools:
  lock: minos.common.PostgreSqlLockPool
  database: minos.common.PostgreSqlPool
  broker: minos.networks.BrokerClientPool
discovery:
  connector: minos.networks.DiscoveryConnector
  client: minos.plugins.minos_discovery.MinosDiscoveryClient
  host: localhost
  port: 5567
saga:
  manager: minos.saga.SagaManager
aggregate:
  entities:
    - src.aggregates.{{ aggregate }}
  repositories:
    transaction: minos.aggregate.PostgreSqlTransactionRepository
    event: minos.aggregate.PostgreSqlEventRepository
    snapshot: minos.aggregate.PostgreSqlSnapshotRepository
routers:
  - minos.networks.BrokerRouter
  - minos.networks.PeriodicRouter
  - minos.networks.RestHttpRouter
middleware:
  - minos.saga.transactional_command
services:
  - minos.aggregate.TransactionService
  - minos.aggregate.SnapshotService
  - minos.saga.SagaService
  - src.queries.{{ aggregate }}QueryService
  - src.commands.{{ aggregate }}CommandService
