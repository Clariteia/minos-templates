name:
  type: str
  help: What is the name of the microservice?
version:
  type: str
  help: What is the version of the microservice?
  default: 0.1.0
aggregate:
  type: str
  default: "{{ name.replace('_',' ').title().replace(' ', '') }}"
  help: What is the name of the microservices's Aggregate?
database:
  type: str
  default: postgresql
  choices:
    - postgresql
  help: What is the database? [ TODO ]
database_host:
  type: str
  default: localhost
  help: What is the database's host?
database_port:
  type: int
  default: 5432
  help: What is the database's port?
database_user:
  type: str
  default: minos
  help: What is the database's user?
database_password:
  type: str
  default: min0s
  secret: true
  help: What is the database's password?
broker_host:
  type: str
  default: localhost
  help: What is the broker's host?
broker:
  type: str
  default: kafka
  choices:
    - kafka
  help: What is the broker? [ TODO ]
broker_port:
  type: str
  default: "9092"
  help: What is the broker's port?
rest_host:
  type: str
  default: 0.0.0.0
  help: What is the rest's host?
rest_port:
  type: int
  default: 8080
  help: What is the rest's port?
discovery:
  type: str
  default: minos
  choices:
    - minos
    - kong
  help: What is the discovery? [ TODO ]
package_manager:
  type: str
  link: true
  help: What package manager do you want to use?
  choices:
    poetry: &poetry_url {{ template_root }}/microservice-python-package-manager-poetry.tar.gz
    pip: {{ template_root }}/microservice-python-package-manager-pip.tar.gz
  default: *poetry_url

_envops:
  block_start_string: "{%"
  block_end_string: "%}"
  comment_start_string: "{#"
  comment_end_string: "#}"
  variable_start_string: "{{"
  variable_end_string: "}}"
  keep_trailing_newline: false

_templates_suffix: .jinja
