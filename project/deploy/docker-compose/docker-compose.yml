version: "3.9"

x-microservice-environment: &microservice-environment
  - MINOS_BROKER_QUEUE_HOST=postgres
  - MINOS_BROKER_HOST=kafka
  - MINOS_REPOSITORY_HOST=postgres
  - MINOS_SNAPSHOT_HOST=postgres
  - MINOS_DISCOVERY_HOST=discovery

x-microservice-depends-on: &microservice-depends-on
  - postgres
  - kafka
  - discovery

volumes:
  postgres_volume:
  kafka_volume:

services:
  zookeeper:
    restart: always
    image: wurstmeister/zookeeper:latest

  kafka:
    restart: always
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    volumes:
      - kafka_volume:/kafka
    environment:
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

  postgres:
    restart: always
    build: external/postgres
    command: postgres -c 'max_connections=200'
    ports:
      - "5432:5432"
    volumes:
      - postgres_volume:/var/lib/postgresql
    environment:
      - POSTGRES_USER=minos
      - POSTGRES_PASSWORD=min0s

  redis:
    image: redis:latest
    command: "redis-server"

  api-gateway:
    restart: always
    build: external/api_gateway
    ports:
      - "5566:5566"
    environment:
      - PYTHONPATH=/api_gateway
      - DISCOVERY_SERVICE_HOST=discovery
      - API_GATEWAY_DISCOVERY_HOST=discovery
    depends_on:
      - discovery

  discovery:
    restart: always
    build: external/discovery
    environment:
      - DISCOVERY_SERVICE_DB_HOST=redis
    depends_on:
      - redis